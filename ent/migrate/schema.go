// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DepartmentsColumns holds the columns for the "departments" table.
	DepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 26},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeInt64, Default: 0},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "code", Type: field.TypeString, Size: 50},
		{Name: "manager", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "manager_id", Type: field.TypeString, Nullable: true, Size: 26},
		{Name: "phone", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "inactive"}, Default: "active"},
		{Name: "level", Type: field.TypeInt, Default: 0},
		{Name: "path", Type: field.TypeString, Size: 1000, Default: ""},
		{Name: "parent_id", Type: field.TypeString, Nullable: true, Size: 26},
	}
	// DepartmentsTable holds the schema information for the "departments" table.
	DepartmentsTable = &schema.Table{
		Name:       "departments",
		Columns:    DepartmentsColumns,
		PrimaryKey: []*schema.Column{DepartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "departments_departments_parent",
				Columns:    []*schema.Column{DepartmentsColumns[14]},
				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "department_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[3]},
			},
			{
				Name:    "department_created_at",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[1]},
			},
			{
				Name:    "department_updated_at",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[2]},
			},
			{
				Name:    "department_code_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{DepartmentsColumns[5], DepartmentsColumns[3]},
			},
			{
				Name:    "department_parent_id",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[14]},
			},
			{
				Name:    "department_status",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[11]},
			},
			{
				Name:    "department_manager_id",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[7]},
			},
			{
				Name:    "department_level",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[12]},
			},
			{
				Name:    "department_sort_order",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[10]},
			},
			{
				Name:    "department_parent_id_status",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[14], DepartmentsColumns[11]},
			},
			{
				Name:    "department_parent_id_sort_order",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[14], DepartmentsColumns[10]},
			},
			{
				Name:    "department_status_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[11], DepartmentsColumns[3]},
			},
			{
				Name:    "department_level_sort_order",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[12], DepartmentsColumns[10]},
			},
			{
				Name:    "department_path",
				Unique:  false,
				Columns: []*schema.Column{DepartmentsColumns[13]},
			},
		},
	}
	// MenusColumns holds the columns for the "menus" table.
	MenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 26},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeInt64, Default: 0},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"directory", "menu", "button"}},
		{Name: "path", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "component", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "icon", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "permission", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"enabled", "disabled"}, Default: "enabled"},
		{Name: "visible", Type: field.TypeBool, Default: true},
		{Name: "keep_alive", Type: field.TypeBool, Default: false},
		{Name: "external_link", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "remark", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "parent_id", Type: field.TypeString, Nullable: true, Size: 26},
	}
	// MenusTable holds the schema information for the "menus" table.
	MenusTable = &schema.Table{
		Name:       "menus",
		Columns:    MenusColumns,
		PrimaryKey: []*schema.Column{MenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "menus_menus_parent",
				Columns:    []*schema.Column{MenusColumns[16]},
				RefColumns: []*schema.Column{MenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "menu_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[3]},
			},
			{
				Name:    "menu_created_at",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[1]},
			},
			{
				Name:    "menu_updated_at",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[2]},
			},
			{
				Name:    "menu_path_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{MenusColumns[6], MenusColumns[3]},
			},
			{
				Name:    "menu_permission_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{MenusColumns[10], MenusColumns[3]},
			},
			{
				Name:    "menu_type",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[5]},
			},
			{
				Name:    "menu_parent_id",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[16]},
			},
			{
				Name:    "menu_status",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[11]},
			},
			{
				Name:    "menu_visible",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[12]},
			},
			{
				Name:    "menu_sort_order",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[9]},
			},
			{
				Name:    "menu_parent_id_sort_order",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[16], MenusColumns[9]},
			},
			{
				Name:    "menu_type_status",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[5], MenusColumns[11]},
			},
			{
				Name:    "menu_parent_id_status",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[16], MenusColumns[11]},
			},
			{
				Name:    "menu_status_visible",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[11], MenusColumns[12]},
			},
			{
				Name:    "menu_status_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[11], MenusColumns[3]},
			},
			{
				Name:    "menu_parent_id_status_visible",
				Unique:  false,
				Columns: []*schema.Column{MenusColumns[16], MenusColumns[11], MenusColumns[12]},
			},
		},
	}
	// PositionsColumns holds the columns for the "positions" table.
	PositionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 26},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeInt64, Default: 0},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "code", Type: field.TypeString, Size: 50},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "inactive"}, Default: "active"},
	}
	// PositionsTable holds the schema information for the "positions" table.
	PositionsTable = &schema.Table{
		Name:       "positions",
		Columns:    PositionsColumns,
		PrimaryKey: []*schema.Column{PositionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "position_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PositionsColumns[3]},
			},
			{
				Name:    "position_created_at",
				Unique:  false,
				Columns: []*schema.Column{PositionsColumns[1]},
			},
			{
				Name:    "position_updated_at",
				Unique:  false,
				Columns: []*schema.Column{PositionsColumns[2]},
			},
			{
				Name:    "position_name_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{PositionsColumns[4], PositionsColumns[3]},
			},
			{
				Name:    "position_code_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{PositionsColumns[5], PositionsColumns[3]},
			},
			{
				Name:    "position_status",
				Unique:  false,
				Columns: []*schema.Column{PositionsColumns[8]},
			},
			{
				Name:    "position_sort_order",
				Unique:  false,
				Columns: []*schema.Column{PositionsColumns[7]},
			},
			{
				Name:    "position_status_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{PositionsColumns[8], PositionsColumns[3]},
			},
			{
				Name:    "position_status_sort_order",
				Unique:  false,
				Columns: []*schema.Column{PositionsColumns[8], PositionsColumns[7]},
			},
		},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 26},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeInt64, Default: 0},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "code", Type: field.TypeString, Size: 50},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"enabled", "disabled"}, Default: "enabled"},
		{Name: "data_scope", Type: field.TypeEnum, Enums: []string{"all", "dept_sub", "dept", "self", "custom"}, Default: "all"},
		{Name: "dept_ids", Type: field.TypeJSON, Nullable: true},
		{Name: "is_builtin", Type: field.TypeBool, Default: false},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "remark", Type: field.TypeString, Nullable: true, Size: 500},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:       "roles",
		Columns:    RolesColumns,
		PrimaryKey: []*schema.Column{RolesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "role_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{RolesColumns[3]},
			},
			{
				Name:    "role_created_at",
				Unique:  false,
				Columns: []*schema.Column{RolesColumns[1]},
			},
			{
				Name:    "role_updated_at",
				Unique:  false,
				Columns: []*schema.Column{RolesColumns[2]},
			},
			{
				Name:    "role_name_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{RolesColumns[4], RolesColumns[3]},
			},
			{
				Name:    "role_code_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{RolesColumns[5], RolesColumns[3]},
			},
			{
				Name:    "role_status",
				Unique:  false,
				Columns: []*schema.Column{RolesColumns[7]},
			},
			{
				Name:    "role_is_builtin",
				Unique:  false,
				Columns: []*schema.Column{RolesColumns[10]},
			},
			{
				Name:    "role_sort_order",
				Unique:  false,
				Columns: []*schema.Column{RolesColumns[11]},
			},
			{
				Name:    "role_data_scope",
				Unique:  false,
				Columns: []*schema.Column{RolesColumns[8]},
			},
			{
				Name:    "role_status_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{RolesColumns[7], RolesColumns[3]},
			},
			{
				Name:    "role_status_sort_order",
				Unique:  false,
				Columns: []*schema.Column{RolesColumns[7], RolesColumns[11]},
			},
			{
				Name:    "role_is_builtin_status",
				Unique:  false,
				Columns: []*schema.Column{RolesColumns[10], RolesColumns[7]},
			},
		},
	}
	// RoleMenusColumns holds the columns for the "role_menus" table.
	RoleMenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 26},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeInt64, Default: 0},
		{Name: "menu_id", Type: field.TypeString, Size: 26},
		{Name: "role_id", Type: field.TypeString, Size: 26},
	}
	// RoleMenusTable holds the schema information for the "role_menus" table.
	RoleMenusTable = &schema.Table{
		Name:       "role_menus",
		Columns:    RoleMenusColumns,
		PrimaryKey: []*schema.Column{RoleMenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_menus_menus_role_menus",
				Columns:    []*schema.Column{RoleMenusColumns[4]},
				RefColumns: []*schema.Column{MenusColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "role_menus_roles_role_menus",
				Columns:    []*schema.Column{RoleMenusColumns[5]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "rolemenu_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{RoleMenusColumns[3]},
			},
			{
				Name:    "rolemenu_created_at",
				Unique:  false,
				Columns: []*schema.Column{RoleMenusColumns[1]},
			},
			{
				Name:    "rolemenu_updated_at",
				Unique:  false,
				Columns: []*schema.Column{RoleMenusColumns[2]},
			},
			{
				Name:    "rolemenu_role_id_menu_id_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{RoleMenusColumns[5], RoleMenusColumns[4], RoleMenusColumns[3]},
			},
			{
				Name:    "rolemenu_role_id",
				Unique:  false,
				Columns: []*schema.Column{RoleMenusColumns[5]},
			},
			{
				Name:    "rolemenu_menu_id",
				Unique:  false,
				Columns: []*schema.Column{RoleMenusColumns[4]},
			},
			{
				Name:    "rolemenu_role_id_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{RoleMenusColumns[5], RoleMenusColumns[3]},
			},
			{
				Name:    "rolemenu_menu_id_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{RoleMenusColumns[4], RoleMenusColumns[3]},
			},
		},
	}
	// TokensColumns holds the columns for the "tokens" table.
	TokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 26},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeInt64, Default: 0},
		{Name: "token", Type: field.TypeString, Size: 1000},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"access", "refresh"}},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "is_revoked", Type: field.TypeBool, Default: false},
		{Name: "last_used_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeString, Size: 26},
	}
	// TokensTable holds the schema information for the "tokens" table.
	TokensTable = &schema.Table{
		Name:       "tokens",
		Columns:    TokensColumns,
		PrimaryKey: []*schema.Column{TokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tokens_users_tokens",
				Columns:    []*schema.Column{TokensColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "token_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{TokensColumns[3]},
			},
			{
				Name:    "token_created_at",
				Unique:  false,
				Columns: []*schema.Column{TokensColumns[1]},
			},
			{
				Name:    "token_updated_at",
				Unique:  false,
				Columns: []*schema.Column{TokensColumns[2]},
			},
			{
				Name:    "token_token_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{TokensColumns[4], TokensColumns[3]},
			},
			{
				Name:    "token_user_id",
				Unique:  false,
				Columns: []*schema.Column{TokensColumns[9]},
			},
			{
				Name:    "token_user_id_type",
				Unique:  false,
				Columns: []*schema.Column{TokensColumns[9], TokensColumns[5]},
			},
			{
				Name:    "token_expires_at",
				Unique:  false,
				Columns: []*schema.Column{TokensColumns[6]},
			},
			{
				Name:    "token_is_revoked",
				Unique:  false,
				Columns: []*schema.Column{TokensColumns[7]},
			},
			{
				Name:    "token_type",
				Unique:  false,
				Columns: []*schema.Column{TokensColumns[5]},
			},
			{
				Name:    "token_user_id_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{TokensColumns[9], TokensColumns[3]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 26},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeInt64, Default: 0},
		{Name: "username", Type: field.TypeString, Size: 50},
		{Name: "email", Type: field.TypeString, Size: 255},
		{Name: "password_hash", Type: field.TypeString, Size: 255},
		{Name: "real_name", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "phone", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "department", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "position", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "inactive", "suspended"}, Default: "active"},
		{Name: "force_change_password", Type: field.TypeBool, Default: false},
		{Name: "allow_multi_login", Type: field.TypeBool, Default: true},
		{Name: "last_login_at", Type: field.TypeTime, Nullable: true},
		{Name: "last_login_ip", Type: field.TypeString, Nullable: true, Size: 45},
		{Name: "department_id", Type: field.TypeString, Nullable: true, Size: 26},
		{Name: "position_id", Type: field.TypeString, Nullable: true, Size: 26},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_departments_department_rel",
				Columns:    []*schema.Column{UsersColumns[16]},
				RefColumns: []*schema.Column{DepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "users_positions_position_rel",
				Columns:    []*schema.Column{UsersColumns[17]},
				RefColumns: []*schema.Column{PositionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "user_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[3]},
			},
			{
				Name:    "user_created_at",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[1]},
			},
			{
				Name:    "user_updated_at",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[2]},
			},
			{
				Name:    "user_email_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[5], UsersColumns[3]},
			},
			{
				Name:    "user_username_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[4], UsersColumns[3]},
			},
			{
				Name:    "user_phone_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[8], UsersColumns[3]},
			},
			{
				Name:    "user_status",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[11]},
			},
			{
				Name:    "user_email",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[5]},
			},
			{
				Name:    "user_username",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[4]},
			},
			{
				Name:    "user_phone",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[8]},
			},
			{
				Name:    "user_department",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[9]},
			},
			{
				Name:    "user_department_id",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[16]},
			},
			{
				Name:    "user_position",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[10]},
			},
			{
				Name:    "user_position_id",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[17]},
			},
			{
				Name:    "user_force_change_password",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[12]},
			},
			{
				Name:    "user_allow_multi_login",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[13]},
			},
			{
				Name:    "user_department_status",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[9], UsersColumns[11]},
			},
			{
				Name:    "user_department_id_status",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[16], UsersColumns[11]},
			},
			{
				Name:    "user_position_status",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[10], UsersColumns[11]},
			},
			{
				Name:    "user_position_id_status",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[17], UsersColumns[11]},
			},
			{
				Name:    "user_status_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[11], UsersColumns[3]},
			},
		},
	}
	// UserRolesColumns holds the columns for the "user_roles" table.
	UserRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Size: 26},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeInt64, Default: 0},
		{Name: "role_id", Type: field.TypeString, Size: 26},
		{Name: "user_id", Type: field.TypeString, Size: 26},
	}
	// UserRolesTable holds the schema information for the "user_roles" table.
	UserRolesTable = &schema.Table{
		Name:       "user_roles",
		Columns:    UserRolesColumns,
		PrimaryKey: []*schema.Column{UserRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_roles_roles_user_roles",
				Columns:    []*schema.Column{UserRolesColumns[4]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "user_roles_users_user_roles",
				Columns:    []*schema.Column{UserRolesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userrole_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{UserRolesColumns[3]},
			},
			{
				Name:    "userrole_created_at",
				Unique:  false,
				Columns: []*schema.Column{UserRolesColumns[1]},
			},
			{
				Name:    "userrole_updated_at",
				Unique:  false,
				Columns: []*schema.Column{UserRolesColumns[2]},
			},
			{
				Name:    "userrole_user_id_role_id_deleted_at",
				Unique:  true,
				Columns: []*schema.Column{UserRolesColumns[5], UserRolesColumns[4], UserRolesColumns[3]},
			},
			{
				Name:    "userrole_user_id",
				Unique:  false,
				Columns: []*schema.Column{UserRolesColumns[5]},
			},
			{
				Name:    "userrole_role_id",
				Unique:  false,
				Columns: []*schema.Column{UserRolesColumns[4]},
			},
			{
				Name:    "userrole_user_id_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{UserRolesColumns[5], UserRolesColumns[3]},
			},
			{
				Name:    "userrole_role_id_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{UserRolesColumns[4], UserRolesColumns[3]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DepartmentsTable,
		MenusTable,
		PositionsTable,
		RolesTable,
		RoleMenusTable,
		TokensTable,
		UsersTable,
		UserRolesTable,
	}
)

func init() {
	DepartmentsTable.ForeignKeys[0].RefTable = DepartmentsTable
	MenusTable.ForeignKeys[0].RefTable = MenusTable
	RoleMenusTable.ForeignKeys[0].RefTable = MenusTable
	RoleMenusTable.ForeignKeys[1].RefTable = RolesTable
	TokensTable.ForeignKeys[0].RefTable = UsersTable
	UsersTable.ForeignKeys[0].RefTable = DepartmentsTable
	UsersTable.ForeignKeys[1].RefTable = PositionsTable
	UserRolesTable.ForeignKeys[0].RefTable = RolesTable
	UserRolesTable.ForeignKeys[1].RefTable = UsersTable
}
